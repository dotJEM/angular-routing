{
    "project": {
        "name": "angular-routing",
        "description": "State-based routing and view management for AngularJS",
        "version": "0.3.2",
        "url": ""
    },
    "files": {
        "build\\src\\directives\\jemAnchor.js": {
            "name": "build\\src\\directives\\jemAnchor.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "build\\src\\directives\\jemView.js": {
            "name": "build\\src\\directives\\jemView.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "build\\src\\common.js": {
            "name": "build\\src\\common.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "build\\src\\route.js": {
            "name": "build\\src\\route.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "build\\src\\scroll.js": {
            "name": "build\\src\\scroll.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "build\\src\\state.js": {
            "name": "build\\src\\state.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "build\\src\\stateTransition.js": {
            "name": "build\\src\\stateTransition.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "build\\src\\template.js": {
            "name": "build\\src\\template.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "build\\src\\view.js": {
            "name": "build\\src\\view.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {},
    "classes": {},
    "classitems": [
        {
            "file": "build\\src\\directives\\jemAnchor.js",
            "line": 5,
            "ngdoc": "directive",
            "name": "dotjem.routing.directive:jemAnchor",
            "restrict": "ECA",
            "description": "",
            "element": "ANY",
            "params": [
                {
                    "name": "jemAnchor",
                    "description": "Identifier of the anchor",
                    "type": "String"
                }
            ],
            "scope": "",
            "example": [
                "\n<example module=\"ngViewExample\" deps=\"angular-route.js\" animations=\"true\">"
            ],
            "class": ""
        },
        {
            "file": "build\\src\\directives\\jemView.js",
            "line": 1,
            "ngdoc": "directive",
            "name": "dotjem.routing.directive:jemView",
            "restrict": "ECA",
            "description": "",
            "element": "ANY",
            "params": [
                {
                    "name": "jemView",
                    "description": "Name of the view",
                    "type": "String"
                }
            ],
            "scope": "",
            "example": [
                "\n<example module=\"ngViewExample\" deps=\"angular-route.js\" animations=\"true\">"
            ],
            "class": ""
        },
        {
            "file": "build\\src\\common.js",
            "line": 5,
            "ngdoc": "overview",
            "name": "dotjem.routing",
            "description": "Module that provides state based routing, deeplinking services and directives for angular apps.",
            "class": ""
        },
        {
            "file": "build\\src\\common.js",
            "line": 45,
            "description": "We need our custom method because encodeURIComponent is too aggressive and doesn't follow\nhttp://www.ietf.org/rfc/rfc3986.txt with regards to the character set (pchar) allowed in path\nsegments:\n   segment       = *pchar\n   pchar         = unreserved / pct-encoded / sub-delims / \":\" / \"@\"\n   pct-encoded   = \"%\" HEXDIG HEXDIG\n   unreserved    = ALPHA / DIGIT / \"-\" / \".\" / \"_\" / \"~\"\n   sub-delims    = \"!\" / \"$\" / \"&\" / \"'\" / \"(\" / \")\"\n                    / \"*\" / \"+\" / \",\" / \";\" / \"=\"",
            "class": ""
        },
        {
            "file": "build\\src\\common.js",
            "line": 61,
            "description": "This method is intended for encoding *key* or *value* parts of query component. We need a custom\nmethod because encodeURIComponent is too aggressive and encodes stuff that doesn't have to be\nencoded per http://tools.ietf.org/html/rfc3986:\n   query       = *( pchar / \"/\" / \"?\" )\n   pchar         = unreserved / pct-encoded / sub-delims / \":\" / \"@\"\n   unreserved    = ALPHA / DIGIT / \"-\" / \".\" / \"_\" / \"~\"\n   pct-encoded   = \"%\" HEXDIG HEXDIG\n   sub-delims    = \"!\" / \"$\" / \"&\" / \"'\" / \"(\" / \")\"\n                    / \"*\" / \"+\" / \",\" / \";\" / \"=\"",
            "class": ""
        },
        {
            "file": "build\\src\\route.js",
            "line": 5,
            "ngdoc": "object",
            "name": "dotjem.routing.$routeProvider",
            "description": "Used for configuring routes. See {@link dotjem.routing.$route $route} for an example.",
            "class": ""
        },
        {
            "file": "build\\src\\route.js",
            "line": 19,
            "ngdoc": "method",
            "name": "dotjem.$routeProvider#convert",
            "methodof": "dotjem.routing.$routeProvider",
            "params": [
                {
                    "name": "name",
                    "description": "Cerverter name, used in the path when registering routes through the\n  {@link dotjem.routing.routeProvider#when when} function.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "self",
                "type": "Object"
            },
            "description": "Adds a new converter or overwrites an existing one.\n\nBy default the folowing converters are precent:\n - `` - default Converter, used on all parameters that doesn't specify a converter.\n   Matches any input.\n\n - `num` - number converter, used to only mach numeric values.\n\n - `regex` - regular expressions converter, used to match a parameter agains a regular\n   expression.",
            "class": ""
        },
        {
            "file": "build\\src\\route.js",
            "line": 46,
            "ngdoc": "method",
            "name": "dotjem.$routeProvider#when",
            "methodof": "dotjem.routing.$routeProvider",
            "params": [
                {
                    "name": "path",
                    "description": "Route path (matched against `$location.path`). If `$location.path`\n   contains redundant trailing slash or is missing one, the route will still match.\n\n   `path` can contain named groups starting with a colon (`:name`) or curly brackets (`{name}`).\n   All characters up to the next slash are matched and stored in `$routeParams` under the\n   given `name` when the route matches.\n\n   Further, when using the curly bracket syntax, converters can be used to match only specific\n   values, (`{num:name}`) will only match numerical values and (`{regex(\\d{1,2}[a-z]+):name}`)\n   would only match a parameter starting with one or two digits followed by a number of\n   characters between 'a' and 'z'.\n\n   More converters can be registered using the {@link dotjem.routing.routeProvider#convert convert}\n   function.",
                    "type": "String"
                },
                {
                    "name": "route",
                    "description": "Mapping information to be assigned to `$route.current` on route\n   match.\n\n   Object properties:\n\n   - `state` � `{string}` � a state that should be activated when the route is matched.\n   - `action` � `{(string|function()=}` � an action that should be performed when the route is matched.\n   - `redirectTo` � {(string|function())=} � value to update\n     {@link ng.$location $location} path with and trigger route redirection.\n\n     If `redirectTo` is a function, it will be called with the following parameters:\n\n     - `{Object.<string>}` - route parameters extracted from the current\n       `$location.path()` by applying the current route templateUrl.\n     - `{string}` - current `$location.path()`\n     - `{Object}` - current `$location.search()`\n\n     The custom `redirectTo` function is expected to return a string which will be used\n     to update `$location.path()` and `$location.search()`.\n\n   - `[reloadOnSearch=true]` - {boolean=} - reload route when only $location.search()\n   changes.\n\n     If the option is set to `false` and url in the browser changes, then\n     `$routeUpdate` event is broadcasted on the root scope.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "self",
                "type": "Object"
            },
            "description": "Adds a new route definition to the `$route` service.",
            "class": ""
        },
        {
            "file": "build\\src\\route.js",
            "line": 122,
            "ngdoc": "method",
            "name": "dotjem.$routeProvider#otherwise",
            "methodof": "dotjem.routing.$routeProvider",
            "params": [
                {
                    "name": "params",
                    "description": "Mapping information to be assigned to `$route.current`.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "self",
                "type": "Object"
            },
            "description": "Sets route definition that will be used on route change when no other route definition\nis matched.",
            "class": ""
        },
        {
            "file": "build\\src\\route.js",
            "line": 139,
            "ngdoc": "method",
            "name": "dotjem.$routeProvider#decorate",
            "methodof": "dotjem.routing.$routeProvider",
            "params": [
                {
                    "name": "name",
                    "description": "A name for the decorator.",
                    "type": "String"
                },
                {
                    "name": "decorator",
                    "description": "The decorator function.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "self",
                "type": "Object"
            },
            "description": "Allows for decorating a route just before the $routeChangeSuccess event is raised.",
            "class": ""
        },
        {
            "file": "build\\src\\route.js",
            "line": 157,
            "ngdoc": "method",
            "name": "dotjem.$routeProvider#ignoreCase",
            "methodof": "dotjem.routing.$routeProvider",
            "return": {
                "description": "self",
                "type": "Object"
            },
            "description": "Turns case insensitive matching on for routes defined after calling this method.",
            "class": ""
        },
        {
            "file": "build\\src\\route.js",
            "line": 171,
            "ngdoc": "method",
            "name": "dotjem.$routeProvider#matchCase",
            "methodof": "dotjem.routing.$routeProvider",
            "return": {
                "description": "self",
                "type": "Object"
            },
            "description": "Turns case sensitive matching on for routes defined after calling this method.",
            "class": ""
        },
        {
            "file": "build\\src\\route.js",
            "line": 414,
            "ngdoc": "object",
            "name": "current Reference to the current route definition.",
            "requires": [
                "$location",
                "$routeParams"
            ],
            "itemtype": "property",
            "type": "Object",
            "description": "Is used for deep-linking URLs to states.\nIt watches `$location.url()` and tries to map the path to an existing route definition.\n\nYou can define routes through {@link dotjem.routing.$routeProvider $routeProvider}'s API.",
            "class": "",
            "subprops": [
                {
                    "name": "routes",
                    "description": "Array of all configured routes.",
                    "type": "Array.<Object>"
                }
            ]
        },
        {
            "file": "build\\src\\route.js",
            "line": 431,
            "ngdoc": "event",
            "name": "dotjem.routing.$route#$routeChangeStart",
            "eventof": "dotjem.routing.$route",
            "eventtype": "broadcast on root scope",
            "description": "Broadcasted before a route change. At this  point the route services starts\nresolving all of the dependencies needed for the route change to occurs.",
            "params": [
                {
                    "name": "angularEvent",
                    "description": "Synthetic event object.",
                    "type": "Object"
                },
                {
                    "name": "next",
                    "description": "Future route information.",
                    "type": "Route"
                },
                {
                    "name": "current",
                    "description": "Current route information.",
                    "type": "Route"
                }
            ],
            "class": ""
        },
        {
            "file": "build\\src\\route.js",
            "line": 446,
            "ngdoc": "event",
            "name": "dotjem.routing.$route#$routeChangeSuccess",
            "eventof": "dotjem.routing.$route",
            "eventtype": "broadcast on root scope",
            "description": "Broadcasted after a route dependencies are resolved.",
            "params": [
                {
                    "name": "angularEvent",
                    "description": "Synthetic event object.",
                    "type": "Object"
                },
                {
                    "name": "current",
                    "description": "Current route information.",
                    "type": "Route"
                },
                {
                    "name": "previous",
                    "description": "Previous route information, or undefined if current is first route entered.",
                    "type": "Route|Undefined"
                }
            ],
            "class": ""
        },
        {
            "file": "build\\src\\route.js",
            "line": 460,
            "ngdoc": "event",
            "name": "dotjem.routing.$route#$routeChangeError",
            "eventof": "dotjem.routing.$route",
            "eventtype": "broadcast on root scope",
            "description": "Broadcasted if any of the resolve promises are rejected.",
            "params": [
                {
                    "name": "angularEvent",
                    "description": "Synthetic event object.",
                    "type": "Object"
                },
                {
                    "name": "current",
                    "description": "Current route information.",
                    "type": "Route"
                },
                {
                    "name": "previous",
                    "description": "Previous route information.",
                    "type": "Route"
                },
                {
                    "name": "rejection",
                    "description": "Rejection of the promise. Usually the error of the failed promise.",
                    "type": "Object"
                }
            ],
            "class": ""
        },
        {
            "file": "build\\src\\route.js",
            "line": 475,
            "ngdoc": "event",
            "name": "dotjem.routing.$route#$routeUpdate",
            "eventof": "dotjem.routing.$route",
            "eventtype": "broadcast on root scope",
            "description": "The `reloadOnSearch` property has been set to false.",
            "class": ""
        },
        {
            "file": "build\\src\\route.js",
            "line": 485,
            "ngdoc": "method",
            "name": "dotjem.routing.$route#reload",
            "methodof": "dotjem.routing.$route",
            "description": "Causes `$route` service to reload the current route even if\n{@link ng.$location $location} hasn't changed.\n\nAs a result of that, {@link dotjem.routing.directive:jemView jemView}\ncreates new scope, reinstantiates the controller.",
            "class": ""
        },
        {
            "file": "build\\src\\route.js",
            "line": 497,
            "ngdoc": "method",
            "name": "dotjem.routing.$route#change",
            "methodof": "dotjem.routing.$route",
            "params": [
                {
                    "name": "args",
                    "description": "Object with details about the route change.\nThe route definition contains:\n\n  - `route` {string} The route to change to, can have parameters.\n  - `params` {Object=} A parameter object with parameters to fill into the route.\n  - `replace` {boolean=} - True if the route should replace the browser history entry, otherwise false.",
                    "type": "Object"
                }
            ],
            "description": "Changes the route.\n\nAs a result of that, changes the {@link ng.$location path}.",
            "class": ""
        },
        {
            "file": "build\\src\\route.js",
            "line": 514,
            "ngdoc": "method",
            "name": "dotjem.routing.$route#format",
            "methodof": "dotjem.routing.$route",
            "params": [
                {
                    "name": "route",
                    "description": "Route to format.",
                    "type": "String"
                },
                {
                    "name": "params",
                    "description": "Parameters to fill into the route.",
                    "type": "Object="
                }
            ],
            "return": {
                "description": "An url generated from the provided parameters.",
                "type": "String"
            },
            "description": "Formats the given provided route into an url.",
            "class": ""
        },
        {
            "file": "build\\src\\scroll.js",
            "line": 7,
            "ngdoc": "function",
            "name": "dotjem.routing.$scroll",
            "requires": [
                "$window",
                "$rootScope",
                "$anchorScroll",
                "$injector"
            ],
            "params": [
                {
                    "name": "target",
                    "description": "The element name to scroll to or a function returning it.",
                    "type": "String|function="
                }
            ],
            "description": "",
            "class": ""
        },
        {
            "file": "build\\src\\scroll.js",
            "line": 59,
            "description": "scrollTo: top - scroll to top, explicitly stated.\n          (This also enables one to override another scrollTo from a parent)\nscrollTo: null - don't scroll, not even to top.\nscrollTo: element-selector - scroll to an element id\nscrollTo: ['$stateParams', function($stateParams) { return stateParams.section; }\n          - scroll to element with id or view if starts with @",
            "class": ""
        },
        {
            "file": "build\\src\\state.js",
            "line": 10,
            "ngdoc": "object",
            "name": "dotjem.routing.$stateProvider",
            "description": "Used for configuring states. See {@link dotjem.routing.$state $state} for an example.",
            "class": ""
        },
        {
            "file": "build\\src\\state.js",
            "line": 27,
            "ngdoc": "method",
            "name": "dotjem.$stateProvider#state",
            "methodof": "dotjem.routing.$stateProvider",
            "params": [
                {
                    "name": "fullname",
                    "description": "Full name of the state, use '.' to seperate parent and child states.\n\nE.g. if the full name \"home\" is given, the state is directly located under the root.\nIt then becomes possible to register \"home.recents\" as a child named \"recents\" under the state \"home\".\n\nThe following registrations would result in the ilustated hierachy.\n\n`.state('home', {})`\n`.state('home.recents', {})`\n`.state('home.all', {})`\n`.state('staff', {})`\n`.state('staff.all', {})`\n`.state('staff.single', {})`\n\n  - home\n    - recents\n    - all\n  - staff\n    - all\n    - single",
                    "type": "String"
                },
                {
                    "name": "state",
                    "description": "All information about the state.\n\n   Object properties:\n\n- `views`: `{Object}` A list og views to be updated when the state is activated.\n- `route`: `{string}` A route to associate the state with,\n  this will be registered with the {@link dotjem.routing.$routeProvider $routeProvider}\n- `onEnter`: `{string|function|Object}` value\n- `onExit`: `{string|function|Object}` value\n- `reloadOnSearch`: `{bool}` If associated with a route, should that route reload on search.\n- `scrollTo`: {string=} � A element to scroll to when the state has been loaded.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "self",
                "type": "Object"
            },
            "description": "Adds a new route definition to the `$route` service.",
            "class": ""
        },
        {
            "file": "build\\src\\state.js",
            "line": 86,
            "ngdoc": "object",
            "name": "current Reference to the current state loaded.",
            "requires": [
                "$rootScope",
                "$q",
                "$injector",
                "$route",
                "$view",
                "$stateTransition",
                "$location",
                "$scroll"
            ],
            "itemtype": "property",
            "type": "Object",
            "description": "You can define states through {@link dotjem.routing.$stateProvider $stateProvider}'s API.",
            "class": ""
        },
        {
            "file": "build\\src\\state.js",
            "line": 105,
            "ngdoc": "event",
            "name": "dotjem.routing.$state#$stateChangeStart",
            "eventof": "dotjem.routing.$state",
            "eventtype": "broadcast on root scope",
            "description": "Broadcasted before a route change. At this  point the route services starts\nresolving all of the dependencies needed for the route change to occurs.",
            "params": [
                {
                    "name": "angularEvent",
                    "description": "Synthetic event object.",
                    "type": "Object"
                },
                {
                    "name": "next",
                    "description": "Future state.",
                    "type": "State"
                },
                {
                    "name": "current",
                    "description": "Current state.",
                    "type": "State"
                }
            ],
            "class": ""
        },
        {
            "file": "build\\src\\state.js",
            "line": 120,
            "ngdoc": "event",
            "name": "dotjem.routing.$state#$stateChangeSuccess",
            "eventof": "dotjem.routing.$state",
            "eventtype": "broadcast on root scope",
            "description": "Broadcasted after a route dependencies are resolved.",
            "params": [
                {
                    "name": "angularEvent",
                    "description": "Synthetic event object.",
                    "type": "Object"
                },
                {
                    "name": "next",
                    "description": "Future state.",
                    "type": "State"
                },
                {
                    "name": "current",
                    "description": "Current state.",
                    "type": "State"
                }
            ],
            "class": ""
        },
        {
            "file": "build\\src\\state.js",
            "line": 134,
            "ngdoc": "event",
            "name": "dotjem.routing.$state#$stateChangeError",
            "eventof": "dotjem.routing.$state",
            "eventtype": "broadcast on root scope",
            "description": "Broadcasted if any of the resolve promises are rejected.",
            "params": [
                {
                    "name": "angularEvent",
                    "description": "Synthetic event object.",
                    "type": "Object"
                },
                {
                    "name": "next",
                    "description": "Future state.",
                    "type": "State"
                },
                {
                    "name": "current",
                    "description": "Current state.",
                    "type": "State"
                },
                {
                    "name": "rejection",
                    "description": "Rejection of the promise. Usually the error of the failed promise.",
                    "type": "Object"
                }
            ],
            "class": ""
        },
        {
            "file": "build\\src\\state.js",
            "line": 149,
            "ngdoc": "event",
            "name": "dotjem.routing.$state#$stateUpdate",
            "eventof": "dotjem.routing.$state",
            "eventtype": "broadcast on root scope",
            "description": "",
            "class": ""
        },
        {
            "file": "build\\src\\state.js",
            "line": 158,
            "ngdoc": "method",
            "name": "dotjem.routing.$state#goto",
            "methodof": "dotjem.routing.$state",
            "params": [
                {
                    "name": "state",
                    "description": "Current state.",
                    "type": "State|string"
                },
                {
                    "name": "params",
                    "description": "Current state.",
                    "type": "Object"
                }
            ],
            "description": "Goes to the specified state,",
            "class": ""
        },
        {
            "file": "build\\src\\state.js",
            "line": 169,
            "ngdoc": "method",
            "name": "dotjem.routing.$state#lookup",
            "methodof": "dotjem.routing.$state",
            "params": [
                {
                    "name": "path",
                    "description": "Expression to resolve or the full name of a state.",
                    "type": "String"
                }
            ],
            "description": "Finds a state based on the provided expression or name.",
            "class": ""
        },
        {
            "file": "build\\src\\state.js",
            "line": 179,
            "ngdoc": "method",
            "name": "dotjem.routing.$state#reload",
            "methodof": "dotjem.routing.$state",
            "params": [
                {
                    "name": "state",
                    "description": "Name or State in the current hierachy or true/false",
                    "type": "State|string|boolean="
                }
            ],
            "description": "Reloads the state and associated views.",
            "class": ""
        },
        {
            "file": "build\\src\\state.js",
            "line": 189,
            "ngdoc": "method",
            "name": "dotjem.routing.$state#url",
            "methodof": "dotjem.routing.$state",
            "params": [
                {
                    "name": "state",
                    "description": "A state to generate an URL for",
                    "type": "State|string="
                },
                {
                    "name": "params",
                    "description": "A set of parameters to use when generating the url",
                    "type": "Object="
                }
            ],
            "description": "An url generated from the provided parameters.",
            "class": ""
        },
        {
            "file": "build\\src\\stateTransition.js",
            "line": 4,
            "ngdoc": "object",
            "name": "dotjem.routing.$stateTransitionProvider",
            "description": "Used for configuring states. See {@link dotjem.routing.$state $state} for an example.",
            "class": ""
        },
        {
            "file": "build\\src\\stateTransition.js",
            "line": 44,
            "ngdoc": "method",
            "name": "dotjem.routing.$stateTransitionProvider#onEnter",
            "methodof": "dotjem.routing.$stateTransitionProvider",
            "params": [
                {
                    "name": "state",
                    "description": "The state we are transitioning to.",
                    "type": "String|State|Array"
                },
                {
                    "name": "onenter",
                    "description": "The handler to invoke when entering the state.",
                    "type": "Funtion|Object"
                }
            ],
            "description": "",
            "class": ""
        },
        {
            "file": "build\\src\\stateTransition.js",
            "line": 63,
            "ngdoc": "method",
            "name": "dotjem.routing.$stateTransitionProvider#onExit",
            "methodof": "dotjem.routing.$stateTransitionProvider",
            "params": [
                {
                    "name": "state",
                    "description": "The state we are transitioning from.",
                    "type": "String|State|Array"
                },
                {
                    "name": "onexit",
                    "description": "The handler to invoke when entering the state.",
                    "type": "Funtion|Object"
                }
            ],
            "description": "",
            "class": ""
        },
        {
            "file": "build\\src\\stateTransition.js",
            "line": 81,
            "ngdoc": "method",
            "name": "dotjem.routing.$stateTransitionProvider#transition",
            "methodof": "dotjem.routing.$stateTransitionProvider",
            "params": [
                {
                    "name": "from",
                    "description": "The state we are transitioning from.",
                    "type": "String|State|Array"
                },
                {
                    "name": "to",
                    "description": "The state we are transitioning to.",
                    "type": "String|State|Array"
                },
                {
                    "name": "handler",
                    "description": "The handler to invoke when the transitioning occurs.",
                    "type": "Funtion|Object"
                }
            ],
            "description": "",
            "class": ""
        },
        {
            "file": "build\\src\\stateTransition.js",
            "line": 165,
            "ngdoc": "object",
            "name": "dotjem.routing.$stateTransition",
            "requires": [
                "$q",
                "$injector"
            ],
            "description": "",
            "class": ""
        },
        {
            "file": "build\\src\\stateTransition.js",
            "line": 179,
            "ngdoc": "method",
            "name": "dotjem.routing.$stateTransition#find",
            "methodof": "dotjem.routing.$stateTransition",
            "params": [
                {
                    "name": "from",
                    "description": "The state we are transitioning from.",
                    "type": "String|State|Array"
                },
                {
                    "name": "to",
                    "description": "The state we are transitioning to.",
                    "type": "String|State|Array"
                }
            ],
            "description": "",
            "class": ""
        },
        {
            "file": "build\\src\\template.js",
            "line": 7,
            "ngdoc": "object",
            "name": "dotjem.routing.$template",
            "description": "",
            "class": ""
        },
        {
            "file": "build\\src\\template.js",
            "line": 42,
            "ngdoc": "method",
            "name": "dotjem.routing.$template#get",
            "methodof": "dotjem.routing.$template",
            "params": [
                {
                    "name": "template",
                    "description": "Either a string reprecenting the actual template,\nan url to it, a function returning it or an object specifying a location of the template.\n\nIf a template object i used, one of the following properties may be used:\n- `url` `{string}`: An url location of the template.\n- `fn` `{function}`: A function that returns the template.\n- `html` `{string}`: The actual template as raw html.",
                    "type": "String|Object|function"
                }
            ],
            "return": {
                "description": "a promise that resolves to the template.",
                "type": "Promise"
            },
            "description": "",
            "class": ""
        },
        {
            "file": "build\\src\\view.js",
            "line": 6,
            "ngdoc": "object",
            "name": "dotjem.routing.$view",
            "description": "",
            "class": ""
        },
        {
            "file": "build\\src\\view.js",
            "line": 35,
            "ngdoc": "method",
            "name": "dotjem.$view#clear",
            "methodof": "dotjem.routing.$view",
            "params": [
                {
                    "name": "name",
                    "description": "The name of the view to clear (optional)",
                    "type": "String"
                }
            ],
            "description": "Clears a view, or all views if no name is provided.",
            "class": ""
        },
        {
            "file": "build\\src\\view.js",
            "line": 68,
            "ngdoc": "method",
            "name": "dotjem.$view#setOrUpdate",
            "methodof": "dotjem.routing.$view",
            "params": [
                {
                    "name": "name",
                    "description": "Name",
                    "type": "String"
                },
                {
                    "name": "args",
                    "description": "Arguments",
                    "type": "Object"
                }
            ],
            "description": "",
            "class": ""
        },
        {
            "file": "build\\src\\view.js",
            "line": 79,
            "ngdoc": "method",
            "name": "dotjem.$view#setOrUpdate",
            "methodof": "dotjem.routing.$view",
            "params": [
                {
                    "name": "name",
                    "description": "Name",
                    "type": "String"
                },
                {
                    "name": "template",
                    "description": "Template",
                    "type": "Object"
                },
                {
                    "name": "controller",
                    "description": "Controller",
                    "type": "Function="
                },
                {
                    "name": "locals",
                    "description": "Locals",
                    "type": "Object="
                },
                {
                    "name": "sticky",
                    "description": "Sticky flag",
                    "type": "String="
                }
            ],
            "description": "",
            "class": ""
        },
        {
            "file": "build\\src\\view.js",
            "line": 131,
            "ngdoc": "method",
            "name": "dotjem.$view#setIfAbsent",
            "methodof": "dotjem.routing.$view",
            "params": [
                {
                    "name": "name",
                    "description": "Name",
                    "type": "String"
                },
                {
                    "name": "args",
                    "description": "Arguments",
                    "type": "Object"
                }
            ],
            "description": "",
            "class": ""
        },
        {
            "file": "build\\src\\view.js",
            "line": 142,
            "ngdoc": "method",
            "name": "dotjem.$view#setIfAbsent",
            "methodof": "dotjem.routing.$view",
            "params": [
                {
                    "name": "name",
                    "description": "Name",
                    "type": "String"
                },
                {
                    "name": "template",
                    "description": "Template",
                    "type": "Object"
                },
                {
                    "name": "controller",
                    "description": "Controller",
                    "type": "Function="
                },
                {
                    "name": "locals",
                    "description": "Locals",
                    "type": "Object="
                }
            ],
            "description": "",
            "class": ""
        },
        {
            "file": "build\\src\\view.js",
            "line": 186,
            "ngdoc": "method",
            "name": "dotjem.$view#get",
            "methodof": "dotjem.routing.$view",
            "params": [
                {
                    "name": "name",
                    "description": "Name",
                    "type": "String"
                }
            ],
            "description": "",
            "class": ""
        },
        {
            "file": "build\\src\\view.js",
            "line": 205,
            "ngdoc": "method",
            "name": "dotjem.$view#refresh",
            "methodof": "dotjem.routing.$view",
            "params": [
                {
                    "name": "name",
                    "description": "Name",
                    "type": "String="
                },
                {
                    "name": "data",
                    "description": "Data",
                    "type": "Object="
                }
            ],
            "description": "",
            "class": ""
        },
        {
            "file": "build\\src\\view.js",
            "line": 234,
            "ngdoc": "method",
            "name": "dotjem.$view#beginUpdate",
            "methodof": "dotjem.routing.$view",
            "params": [
                {
                    "name": "name",
                    "description": "Name",
                    "type": "String"
                }
            ],
            "description": "",
            "class": ""
        }
    ],
    "warnings": [
        {
            "message": "unknown tag: ngdoc",
            "line": " build\\src\\directives\\jemAnchor.js:5"
        },
        {
            "message": "unknown tag: name",
            "line": " build\\src\\directives\\jemAnchor.js:5"
        },
        {
            "message": "unknown tag: restrict",
            "line": " build\\src\\directives\\jemAnchor.js:5"
        },
        {
            "message": "unknown tag: element",
            "line": " build\\src\\directives\\jemAnchor.js:5"
        },
        {
            "message": "unknown tag: scope",
            "line": " build\\src\\directives\\jemAnchor.js:5"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " build\\src\\directives\\jemView.js:1"
        },
        {
            "message": "unknown tag: name",
            "line": " build\\src\\directives\\jemView.js:1"
        },
        {
            "message": "unknown tag: restrict",
            "line": " build\\src\\directives\\jemView.js:1"
        },
        {
            "message": "unknown tag: element",
            "line": " build\\src\\directives\\jemView.js:1"
        },
        {
            "message": "unknown tag: scope",
            "line": " build\\src\\directives\\jemView.js:1"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " build\\src\\common.js:5"
        },
        {
            "message": "unknown tag: name",
            "line": " build\\src\\common.js:5"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " build\\src\\route.js:5"
        },
        {
            "message": "unknown tag: name",
            "line": " build\\src\\route.js:5"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " build\\src\\route.js:19"
        },
        {
            "message": "unknown tag: name",
            "line": " build\\src\\route.js:19"
        },
        {
            "message": "unknown tag: methodof",
            "line": " build\\src\\route.js:19"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " build\\src\\route.js:46"
        },
        {
            "message": "unknown tag: name",
            "line": " build\\src\\route.js:46"
        },
        {
            "message": "unknown tag: methodof",
            "line": " build\\src\\route.js:46"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " build\\src\\route.js:46"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " build\\src\\route.js:122"
        },
        {
            "message": "unknown tag: name",
            "line": " build\\src\\route.js:122"
        },
        {
            "message": "unknown tag: methodof",
            "line": " build\\src\\route.js:122"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " build\\src\\route.js:139"
        },
        {
            "message": "unknown tag: name",
            "line": " build\\src\\route.js:139"
        },
        {
            "message": "unknown tag: methodof",
            "line": " build\\src\\route.js:139"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " build\\src\\route.js:157"
        },
        {
            "message": "unknown tag: name",
            "line": " build\\src\\route.js:157"
        },
        {
            "message": "unknown tag: methodof",
            "line": " build\\src\\route.js:157"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " build\\src\\route.js:171"
        },
        {
            "message": "unknown tag: name",
            "line": " build\\src\\route.js:171"
        },
        {
            "message": "unknown tag: methodof",
            "line": " build\\src\\route.js:171"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " build\\src\\route.js:414"
        },
        {
            "message": "unknown tag: name",
            "line": " build\\src\\route.js:414"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " build\\src\\route.js:431"
        },
        {
            "message": "unknown tag: name",
            "line": " build\\src\\route.js:431"
        },
        {
            "message": "unknown tag: eventof",
            "line": " build\\src\\route.js:431"
        },
        {
            "message": "unknown tag: eventtype",
            "line": " build\\src\\route.js:431"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " build\\src\\route.js:446"
        },
        {
            "message": "unknown tag: name",
            "line": " build\\src\\route.js:446"
        },
        {
            "message": "unknown tag: eventof",
            "line": " build\\src\\route.js:446"
        },
        {
            "message": "unknown tag: eventtype",
            "line": " build\\src\\route.js:446"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " build\\src\\route.js:460"
        },
        {
            "message": "unknown tag: name",
            "line": " build\\src\\route.js:460"
        },
        {
            "message": "unknown tag: eventof",
            "line": " build\\src\\route.js:460"
        },
        {
            "message": "unknown tag: eventtype",
            "line": " build\\src\\route.js:460"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " build\\src\\route.js:475"
        },
        {
            "message": "unknown tag: name",
            "line": " build\\src\\route.js:475"
        },
        {
            "message": "unknown tag: eventof",
            "line": " build\\src\\route.js:475"
        },
        {
            "message": "unknown tag: eventtype",
            "line": " build\\src\\route.js:475"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " build\\src\\route.js:485"
        },
        {
            "message": "unknown tag: name",
            "line": " build\\src\\route.js:485"
        },
        {
            "message": "unknown tag: methodof",
            "line": " build\\src\\route.js:485"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " build\\src\\route.js:497"
        },
        {
            "message": "unknown tag: name",
            "line": " build\\src\\route.js:497"
        },
        {
            "message": "unknown tag: methodof",
            "line": " build\\src\\route.js:497"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " build\\src\\route.js:514"
        },
        {
            "message": "unknown tag: name",
            "line": " build\\src\\route.js:514"
        },
        {
            "message": "unknown tag: methodof",
            "line": " build\\src\\route.js:514"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " build\\src\\scroll.js:7"
        },
        {
            "message": "unknown tag: name",
            "line": " build\\src\\scroll.js:7"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " build\\src\\state.js:10"
        },
        {
            "message": "unknown tag: name",
            "line": " build\\src\\state.js:10"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " build\\src\\state.js:27"
        },
        {
            "message": "unknown tag: name",
            "line": " build\\src\\state.js:27"
        },
        {
            "message": "unknown tag: methodof",
            "line": " build\\src\\state.js:27"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " build\\src\\state.js:27"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " build\\src\\state.js:86"
        },
        {
            "message": "unknown tag: name",
            "line": " build\\src\\state.js:86"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " build\\src\\state.js:105"
        },
        {
            "message": "unknown tag: name",
            "line": " build\\src\\state.js:105"
        },
        {
            "message": "unknown tag: eventof",
            "line": " build\\src\\state.js:105"
        },
        {
            "message": "unknown tag: eventtype",
            "line": " build\\src\\state.js:105"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " build\\src\\state.js:120"
        },
        {
            "message": "unknown tag: name",
            "line": " build\\src\\state.js:120"
        },
        {
            "message": "unknown tag: eventof",
            "line": " build\\src\\state.js:120"
        },
        {
            "message": "unknown tag: eventtype",
            "line": " build\\src\\state.js:120"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " build\\src\\state.js:134"
        },
        {
            "message": "unknown tag: name",
            "line": " build\\src\\state.js:134"
        },
        {
            "message": "unknown tag: eventof",
            "line": " build\\src\\state.js:134"
        },
        {
            "message": "unknown tag: eventtype",
            "line": " build\\src\\state.js:134"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " build\\src\\state.js:149"
        },
        {
            "message": "unknown tag: name",
            "line": " build\\src\\state.js:149"
        },
        {
            "message": "unknown tag: eventof",
            "line": " build\\src\\state.js:149"
        },
        {
            "message": "unknown tag: eventtype",
            "line": " build\\src\\state.js:149"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " build\\src\\state.js:158"
        },
        {
            "message": "unknown tag: name",
            "line": " build\\src\\state.js:158"
        },
        {
            "message": "unknown tag: methodof",
            "line": " build\\src\\state.js:158"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " build\\src\\state.js:169"
        },
        {
            "message": "unknown tag: name",
            "line": " build\\src\\state.js:169"
        },
        {
            "message": "unknown tag: methodof",
            "line": " build\\src\\state.js:169"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " build\\src\\state.js:179"
        },
        {
            "message": "unknown tag: name",
            "line": " build\\src\\state.js:179"
        },
        {
            "message": "unknown tag: methodof",
            "line": " build\\src\\state.js:179"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " build\\src\\state.js:189"
        },
        {
            "message": "unknown tag: name",
            "line": " build\\src\\state.js:189"
        },
        {
            "message": "unknown tag: methodof",
            "line": " build\\src\\state.js:189"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " build\\src\\stateTransition.js:4"
        },
        {
            "message": "unknown tag: name",
            "line": " build\\src\\stateTransition.js:4"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " build\\src\\stateTransition.js:44"
        },
        {
            "message": "unknown tag: name",
            "line": " build\\src\\stateTransition.js:44"
        },
        {
            "message": "unknown tag: methodof",
            "line": " build\\src\\stateTransition.js:44"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " build\\src\\stateTransition.js:63"
        },
        {
            "message": "unknown tag: name",
            "line": " build\\src\\stateTransition.js:63"
        },
        {
            "message": "unknown tag: methodof",
            "line": " build\\src\\stateTransition.js:63"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " build\\src\\stateTransition.js:81"
        },
        {
            "message": "unknown tag: name",
            "line": " build\\src\\stateTransition.js:81"
        },
        {
            "message": "unknown tag: methodof",
            "line": " build\\src\\stateTransition.js:81"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " build\\src\\stateTransition.js:165"
        },
        {
            "message": "unknown tag: name",
            "line": " build\\src\\stateTransition.js:165"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " build\\src\\stateTransition.js:179"
        },
        {
            "message": "unknown tag: name",
            "line": " build\\src\\stateTransition.js:179"
        },
        {
            "message": "unknown tag: methodof",
            "line": " build\\src\\stateTransition.js:179"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " build\\src\\template.js:7"
        },
        {
            "message": "unknown tag: name",
            "line": " build\\src\\template.js:7"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " build\\src\\template.js:42"
        },
        {
            "message": "unknown tag: name",
            "line": " build\\src\\template.js:42"
        },
        {
            "message": "unknown tag: methodof",
            "line": " build\\src\\template.js:42"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " build\\src\\template.js:42"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " build\\src\\view.js:6"
        },
        {
            "message": "unknown tag: name",
            "line": " build\\src\\view.js:6"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " build\\src\\view.js:35"
        },
        {
            "message": "unknown tag: name",
            "line": " build\\src\\view.js:35"
        },
        {
            "message": "unknown tag: methodof",
            "line": " build\\src\\view.js:35"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " build\\src\\view.js:68"
        },
        {
            "message": "unknown tag: name",
            "line": " build\\src\\view.js:68"
        },
        {
            "message": "unknown tag: methodof",
            "line": " build\\src\\view.js:68"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " build\\src\\view.js:79"
        },
        {
            "message": "unknown tag: name",
            "line": " build\\src\\view.js:79"
        },
        {
            "message": "unknown tag: methodof",
            "line": " build\\src\\view.js:79"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " build\\src\\view.js:131"
        },
        {
            "message": "unknown tag: name",
            "line": " build\\src\\view.js:131"
        },
        {
            "message": "unknown tag: methodof",
            "line": " build\\src\\view.js:131"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " build\\src\\view.js:142"
        },
        {
            "message": "unknown tag: name",
            "line": " build\\src\\view.js:142"
        },
        {
            "message": "unknown tag: methodof",
            "line": " build\\src\\view.js:142"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " build\\src\\view.js:186"
        },
        {
            "message": "unknown tag: name",
            "line": " build\\src\\view.js:186"
        },
        {
            "message": "unknown tag: methodof",
            "line": " build\\src\\view.js:186"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " build\\src\\view.js:205"
        },
        {
            "message": "unknown tag: name",
            "line": " build\\src\\view.js:205"
        },
        {
            "message": "unknown tag: methodof",
            "line": " build\\src\\view.js:205"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " build\\src\\view.js:234"
        },
        {
            "message": "unknown tag: name",
            "line": " build\\src\\view.js:234"
        },
        {
            "message": "unknown tag: methodof",
            "line": " build\\src\\view.js:234"
        },
        {
            "message": "Missing item type",
            "line": " build\\src\\directives\\jemAnchor.js:5"
        },
        {
            "message": "Missing item type",
            "line": " build\\src\\directives\\jemView.js:1"
        },
        {
            "message": "Missing item type\nModule that provides state based routing, deeplinking services and directives for angular apps.",
            "line": " build\\src\\common.js:5"
        },
        {
            "message": "Missing item type\nWe need our custom method because encodeURIComponent is too aggressive and doesn't follow\nhttp://www.ietf.org/rfc/rfc3986.txt with regards to the character set (pchar) allowed in path\nsegments:\n   segment       = *pchar\n   pchar         = unreserved / pct-encoded / sub-delims / \":\" / \"@\"\n   pct-encoded   = \"%\" HEXDIG HEXDIG\n   unreserved    = ALPHA / DIGIT / \"-\" / \".\" / \"_\" / \"~\"\n   sub-delims    = \"!\" / \"$\" / \"&\" / \"'\" / \"(\" / \")\"\n                    / \"*\" / \"+\" / \",\" / \";\" / \"=\"",
            "line": " build\\src\\common.js:45"
        },
        {
            "message": "Missing item type\nThis method is intended for encoding *key* or *value* parts of query component. We need a custom\nmethod because encodeURIComponent is too aggressive and encodes stuff that doesn't have to be\nencoded per http://tools.ietf.org/html/rfc3986:\n   query       = *( pchar / \"/\" / \"?\" )\n   pchar         = unreserved / pct-encoded / sub-delims / \":\" / \"@\"\n   unreserved    = ALPHA / DIGIT / \"-\" / \".\" / \"_\" / \"~\"\n   pct-encoded   = \"%\" HEXDIG HEXDIG\n   sub-delims    = \"!\" / \"$\" / \"&\" / \"'\" / \"(\" / \")\"\n                    / \"*\" / \"+\" / \",\" / \";\" / \"=\"",
            "line": " build\\src\\common.js:61"
        },
        {
            "message": "Missing item type\nUsed for configuring routes. See {@link dotjem.routing.$route $route} for an example.",
            "line": " build\\src\\route.js:5"
        },
        {
            "message": "Missing item type\nAdds a new converter or overwrites an existing one.\n\nBy default the folowing converters are precent:\n - `` - default Converter, used on all parameters that doesn't specify a converter.\n   Matches any input.\n\n - `num` - number converter, used to only mach numeric values.\n\n - `regex` - regular expressions converter, used to match a parameter agains a regular\n   expression.",
            "line": " build\\src\\route.js:19"
        },
        {
            "message": "Missing item type\nAdds a new route definition to the `$route` service.",
            "line": " build\\src\\route.js:46"
        },
        {
            "message": "Missing item type\nSets route definition that will be used on route change when no other route definition\nis matched.",
            "line": " build\\src\\route.js:122"
        },
        {
            "message": "Missing item type\nAllows for decorating a route just before the $routeChangeSuccess event is raised.",
            "line": " build\\src\\route.js:139"
        },
        {
            "message": "Missing item type\nTurns case insensitive matching on for routes defined after calling this method.",
            "line": " build\\src\\route.js:157"
        },
        {
            "message": "Missing item type\nTurns case sensitive matching on for routes defined after calling this method.",
            "line": " build\\src\\route.js:171"
        },
        {
            "message": "Missing item type\nBroadcasted before a route change. At this  point the route services starts\nresolving all of the dependencies needed for the route change to occurs.",
            "line": " build\\src\\route.js:431"
        },
        {
            "message": "Missing item type\nBroadcasted after a route dependencies are resolved.",
            "line": " build\\src\\route.js:446"
        },
        {
            "message": "Missing item type\nBroadcasted if any of the resolve promises are rejected.",
            "line": " build\\src\\route.js:460"
        },
        {
            "message": "Missing item type\nThe `reloadOnSearch` property has been set to false.",
            "line": " build\\src\\route.js:475"
        },
        {
            "message": "Missing item type\nCauses `$route` service to reload the current route even if\n{@link ng.$location $location} hasn't changed.\n\nAs a result of that, {@link dotjem.routing.directive:jemView jemView}\ncreates new scope, reinstantiates the controller.",
            "line": " build\\src\\route.js:485"
        },
        {
            "message": "Missing item type\nChanges the route.\n\nAs a result of that, changes the {@link ng.$location path}.",
            "line": " build\\src\\route.js:497"
        },
        {
            "message": "Missing item type\nFormats the given provided route into an url.",
            "line": " build\\src\\route.js:514"
        },
        {
            "message": "Missing item type",
            "line": " build\\src\\scroll.js:7"
        },
        {
            "message": "Missing item type\nscrollTo: top - scroll to top, explicitly stated.\n          (This also enables one to override another scrollTo from a parent)\nscrollTo: null - don't scroll, not even to top.\nscrollTo: element-selector - scroll to an element id\nscrollTo: ['$stateParams', function($stateParams) { return stateParams.section; }\n          - scroll to element with id or view if starts with @",
            "line": " build\\src\\scroll.js:59"
        },
        {
            "message": "Missing item type\nUsed for configuring states. See {@link dotjem.routing.$state $state} for an example.",
            "line": " build\\src\\state.js:10"
        },
        {
            "message": "Missing item type\nAdds a new route definition to the `$route` service.",
            "line": " build\\src\\state.js:27"
        },
        {
            "message": "Missing item type\nBroadcasted before a route change. At this  point the route services starts\nresolving all of the dependencies needed for the route change to occurs.",
            "line": " build\\src\\state.js:105"
        },
        {
            "message": "Missing item type\nBroadcasted after a route dependencies are resolved.",
            "line": " build\\src\\state.js:120"
        },
        {
            "message": "Missing item type\nBroadcasted if any of the resolve promises are rejected.",
            "line": " build\\src\\state.js:134"
        },
        {
            "message": "Missing item type",
            "line": " build\\src\\state.js:149"
        },
        {
            "message": "Missing item type\nGoes to the specified state,",
            "line": " build\\src\\state.js:158"
        },
        {
            "message": "Missing item type\nFinds a state based on the provided expression or name.",
            "line": " build\\src\\state.js:169"
        },
        {
            "message": "Missing item type\nReloads the state and associated views.",
            "line": " build\\src\\state.js:179"
        },
        {
            "message": "Missing item type\nAn url generated from the provided parameters.",
            "line": " build\\src\\state.js:189"
        },
        {
            "message": "Missing item type\nUsed for configuring states. See {@link dotjem.routing.$state $state} for an example.",
            "line": " build\\src\\stateTransition.js:4"
        },
        {
            "message": "Missing item type",
            "line": " build\\src\\stateTransition.js:44"
        },
        {
            "message": "Missing item type",
            "line": " build\\src\\stateTransition.js:63"
        },
        {
            "message": "Missing item type",
            "line": " build\\src\\stateTransition.js:81"
        },
        {
            "message": "Missing item type",
            "line": " build\\src\\stateTransition.js:165"
        },
        {
            "message": "Missing item type",
            "line": " build\\src\\stateTransition.js:179"
        },
        {
            "message": "Missing item type",
            "line": " build\\src\\template.js:7"
        },
        {
            "message": "Missing item type",
            "line": " build\\src\\template.js:42"
        },
        {
            "message": "Missing item type",
            "line": " build\\src\\view.js:6"
        },
        {
            "message": "Missing item type\nClears a view, or all views if no name is provided.",
            "line": " build\\src\\view.js:35"
        },
        {
            "message": "Missing item type",
            "line": " build\\src\\view.js:68"
        },
        {
            "message": "Missing item type",
            "line": " build\\src\\view.js:79"
        },
        {
            "message": "Missing item type",
            "line": " build\\src\\view.js:131"
        },
        {
            "message": "Missing item type",
            "line": " build\\src\\view.js:142"
        },
        {
            "message": "Missing item type",
            "line": " build\\src\\view.js:186"
        },
        {
            "message": "Missing item type",
            "line": " build\\src\\view.js:205"
        },
        {
            "message": "Missing item type",
            "line": " build\\src\\view.js:234"
        }
    ]
}